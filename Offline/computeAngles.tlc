%% File : computeAngles.tlc
%% Created: Wed Nov 26 22:52:47 2014
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "computeAngles.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  computeAngles "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs
    
  extern void computeAngles_Outputs_wrapper(const real32_T *accelerometerIn,
                          const real32_T *magnetometerIn,
                          real32_T *XRollAngleOut,
                          real32_T *YPitchAngleOut,
                          real32_T *ZYawAngleOut,
                          real_T *ZYawAngleFlatOut,
                          real32_T *TiltAngleOut);
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py1 = LibBlockOutputSignalAddr(1, "", "", 0)
  %assign py2 = LibBlockOutputSignalAddr(2, "", "", 0)
  %assign py3 = LibBlockOutputSignalAddr(3, "", "", 0)
  %assign py4 = LibBlockOutputSignalAddr(4, "", "", 0)
  %assign py_width = LibBlockOutputSignalWidth(0)
  %assign pu_width = LibBlockInputSignalWidth(0)
  computeAngles_Outputs_wrapper(%<pu0>, %<pu1>, %<py0>, %<py1>, %<py2>, %<py3>, %<py4> );
  %%
%endfunction


%% [EOF] computeAngles.tlc





