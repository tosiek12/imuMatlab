%% Close previous elements, import file from SD Card.
clc;
clear all;
close all
IMU = copyAndImportFileFromSDCard('imuUpAndDownInOZ');
%% (optional) Just load only file to workspace:
% load('imuRotationOfPitchAngle.mat');
load('imuUpAndDownInOZ.mat');
IMU = imuDataset;
clear imuDataset;
%% Compute time vector:
numberOfProbes = length(IMU);
undersamplingFactor = 40;
samplingFrequency = 400;    %Hz
loggingFrequency = samplingFrequency/undersamplingFactor;   
t = (1:numberOfProbes)./loggingFrequency;
%% Show gps coordinates: 
figure(1);
 p = plot(IMU.lonG, IMU.latG, 'xr' );
set(p,'Color','red','MarkerSize',8);
xlabel('lonG');
ylabel('latG');
title('koordynaty');
grid on
axis square

%% gps on maps
load('IMUwPokoju.mat');
IMU = IMwpookoju;
clear IMwpookoju;
mapData = [IMU.lonG, IMU.latG, IMU.altG];
coordinates  = [IMU.lonG, IMU.latG];

noise = 1+0.00002.*randn(size(coordinates));

coordinates_noise = coordinates.*noise;
coordinates_noise = coordinates_noise.*0.000001;

coordinates_noise(:,1) = coordinates_noise(:,1)+ 0.36;  %tak na pa³e, by sie zgadzalo ;)
coordinates_noise(:,2) = coordinates_noise(:,2)+ 0.03;

lon = coordinates_noise(:,1);
lat = coordinates_noise(:,2);

%% Show height from gps and from pressure.
figure(2);
subplot(3,1,1)
plot(t,IMU.altG/10);
title('Wysokoœæ z GPS');
xlabel('Czas, s');
ylabel('Wysokoœæ, m');

subplot(3,1,3)
plot(t,IMU.altP/1000,'-r');
title('Wysokoœæ z Ciœnieniomierza');
xlabel('Czas, s');
ylabel('Wysokoœæ, m');

subplot(3,1,2)
plot(t,IMU.hdop,'-r');
title('HDOP - horizontal degree of precision');
xlabel('Czas, s');
ylabel('Wartoœæ');
hold on;
plot(t,4*ones(1,length(t)),'--g');
